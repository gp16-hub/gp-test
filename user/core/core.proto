syntax = "proto3";

package user.core;
// https://teams.microsoft.com/l/message/19:meeting_NTQ4MjE1MzMtMTdmMC00ZDA0LTkyMmQtMjUzODdmZDMwZWM0@thread.v2/1720694971485?context=%7B%22contextType%22%3A%22chat%22%7D
option go_package="./user/core";

service UserService {
  // Gets a user by ID
  rpc GetUser (GetUserRequest) returns (GetUserResponse);

  // Update a user by ID
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);

	rpc GetUserByToken (GetUserByTokenRequest) returns (GetUserByTokenResponse);

	rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
}


// Message representing a user
message User {
  int32 id = 1;
  string email = 2;
	string firstname = 3;
	string lastname = 4;
	string channel = 5;
	string phone = 6;
}

message Profile {
	string birthday = 1;
	string occupation = 2;
	string housing_type = 3;
	string home_size = 4;
	string most_time_spent_location = 5;
	string annual_household_income = 6;
	bool display_profile_reward_banner = 7;
	bool is_initial_record = 8;
}

message UpdateProfileRequest {
	string birthday = 1;
	string occupation = 2;
	string housing_type = 3;
	string home_size = 4;
	string most_time_spent_location = 5;
	string annual_household_income = 6;
}
// Request message for UpdateUser RPC
message UpdateUserRequest {
  int32 id = 1;
  string email = 2;
	string firstname = 3;
  string lastname = 4;
	string phone = 6;
	string password = 7;
	string new_password = 8;
  UpdateProfileRequest profile = 9;
}

// Response message for UpdateUser RPC
message UpdateUserResponse {
  User user = 1;
  Profile profile = 2;
}

// Request message for GetUser RPC
message GetUserRequest {
  int32 id = 1;
}

// Response message for GetUser RPC
message GetUserResponse {
  User user = 1;
  Profile profile = 2;
}

message GetUserByTokenRequest {
	//  request.headers["X-Spree-Token"] || params[:token]
	optional string token = 1;
	// By default it retrieves first from the `HTTP_AUTHORIZATION` header, then
	// falls back to the `:access_token` or `:bearer_token` params from the `params` object.
	// Check out the wiki for more information on customization
	// access_token_methods :from_bearer_authorization, :from_access_token_param, :from_bearer_param
	// add custom strategy to get access token from X-Access-Token header request.headers["x-access-token"]
	optional string access_token = 2;
}

message GetUserByTokenResponse {
	int32 id = 1;
	string email = 2;
	string firstname = 3;
	string lastname = 4;
}

// Request message for CreateUserRequest RPC
message CreateUserRequest {
	optional int32 id = 1;
	optional string email = 2;
	optional string firstname = 3;
	optional string lastname = 4;
	optional string phone = 6;
	optional string password = 7;
	optional string new_password = 8;
	optional bool system_created = 9;
}

message AccessToken {
	optional string refresh_token = 1;
	optional int64 expires_in = 2;
	optional int64 created_at = 3;
	optional string access_token = 4;
}

// Response message for CreateUserResponse RPC
message CreateUserResponse {
	User user = 1;
	AccessToken access_token = 2;
}

