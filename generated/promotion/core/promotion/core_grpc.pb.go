// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.5
// source: promotion/core/core.proto

package promotion

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PromotionService_AddPromotionToEmails_FullMethodName = "/promotion.PromotionService/AddPromotionToEmails"
	PromotionService_ListPromotion_FullMethodName        = "/promotion.PromotionService/ListPromotion"
	PromotionService_CreatePromotion_FullMethodName      = "/promotion.PromotionService/CreatePromotion"
)

// PromotionServiceClient is the client API for PromotionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PromotionServiceClient interface {
	AddPromotionToEmails(ctx context.Context, in *AddPromotionToEmailsReq, opts ...grpc.CallOption) (*AddPromotionToEmailsRsp, error)
	// promotion
	ListPromotion(ctx context.Context, in *ListPromotionReq, opts ...grpc.CallOption) (*ListPromotionRsp, error)
	CreatePromotion(ctx context.Context, in *CreatePromotionReq, opts ...grpc.CallOption) (*CreatePromotionRsp, error)
}

type promotionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPromotionServiceClient(cc grpc.ClientConnInterface) PromotionServiceClient {
	return &promotionServiceClient{cc}
}

func (c *promotionServiceClient) AddPromotionToEmails(ctx context.Context, in *AddPromotionToEmailsReq, opts ...grpc.CallOption) (*AddPromotionToEmailsRsp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddPromotionToEmailsRsp)
	err := c.cc.Invoke(ctx, PromotionService_AddPromotionToEmails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) ListPromotion(ctx context.Context, in *ListPromotionReq, opts ...grpc.CallOption) (*ListPromotionRsp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListPromotionRsp)
	err := c.cc.Invoke(ctx, PromotionService_ListPromotion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) CreatePromotion(ctx context.Context, in *CreatePromotionReq, opts ...grpc.CallOption) (*CreatePromotionRsp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreatePromotionRsp)
	err := c.cc.Invoke(ctx, PromotionService_CreatePromotion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PromotionServiceServer is the server API for PromotionService service.
// All implementations must embed UnimplementedPromotionServiceServer
// for forward compatibility.
type PromotionServiceServer interface {
	AddPromotionToEmails(context.Context, *AddPromotionToEmailsReq) (*AddPromotionToEmailsRsp, error)
	// promotion
	ListPromotion(context.Context, *ListPromotionReq) (*ListPromotionRsp, error)
	CreatePromotion(context.Context, *CreatePromotionReq) (*CreatePromotionRsp, error)
	mustEmbedUnimplementedPromotionServiceServer()
}

// UnimplementedPromotionServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPromotionServiceServer struct{}

func (UnimplementedPromotionServiceServer) AddPromotionToEmails(context.Context, *AddPromotionToEmailsReq) (*AddPromotionToEmailsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPromotionToEmails not implemented")
}
func (UnimplementedPromotionServiceServer) ListPromotion(context.Context, *ListPromotionReq) (*ListPromotionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPromotion not implemented")
}
func (UnimplementedPromotionServiceServer) CreatePromotion(context.Context, *CreatePromotionReq) (*CreatePromotionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePromotion not implemented")
}
func (UnimplementedPromotionServiceServer) mustEmbedUnimplementedPromotionServiceServer() {}
func (UnimplementedPromotionServiceServer) testEmbeddedByValue()                          {}

// UnsafePromotionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PromotionServiceServer will
// result in compilation errors.
type UnsafePromotionServiceServer interface {
	mustEmbedUnimplementedPromotionServiceServer()
}

func RegisterPromotionServiceServer(s grpc.ServiceRegistrar, srv PromotionServiceServer) {
	// If the following call pancis, it indicates UnimplementedPromotionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PromotionService_ServiceDesc, srv)
}

func _PromotionService_AddPromotionToEmails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPromotionToEmailsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).AddPromotionToEmails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_AddPromotionToEmails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).AddPromotionToEmails(ctx, req.(*AddPromotionToEmailsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_ListPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPromotionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).ListPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_ListPromotion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).ListPromotion(ctx, req.(*ListPromotionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_CreatePromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePromotionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).CreatePromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_CreatePromotion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).CreatePromotion(ctx, req.(*CreatePromotionReq))
	}
	return interceptor(ctx, in, info, handler)
}

// PromotionService_ServiceDesc is the grpc.ServiceDesc for PromotionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PromotionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "promotion.PromotionService",
	HandlerType: (*PromotionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPromotionToEmails",
			Handler:    _PromotionService_AddPromotionToEmails_Handler,
		},
		{
			MethodName: "ListPromotion",
			Handler:    _PromotionService_ListPromotion_Handler,
		},
		{
			MethodName: "CreatePromotion",
			Handler:    _PromotionService_CreatePromotion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "promotion/core/core.proto",
}
