// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: core.proto

package promotionservice

import (
	"context"

	"core/promotion"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddPromotionToEmailsReq = promotion.AddPromotionToEmailsReq
	AddPromotionToEmailsRsp = promotion.AddPromotionToEmailsRsp
	AddUserFileReq          = promotion.AddUserFileReq
	AddUserFileRsp          = promotion.AddUserFileRsp
	Category                = promotion.Category
	CreatePromotionReq      = promotion.CreatePromotionReq
	CreatePromotionRsp      = promotion.CreatePromotionRsp
	FileInfo                = promotion.FileInfo
	Filter                  = promotion.Filter
	GetUserFileReq          = promotion.GetUserFileReq
	GetUserFileRsp          = promotion.GetUserFileRsp
	ListPromotionReq        = promotion.ListPromotionReq
	ListPromotionRsp        = promotion.ListPromotionRsp
	Page                    = promotion.Page
	Promotion               = promotion.Promotion
	Sort                    = promotion.Sort
	TimePeriod              = promotion.TimePeriod

	PromotionService interface {
		AddPromotionToEmails(ctx context.Context, in *AddPromotionToEmailsReq, opts ...grpc.CallOption) (*AddPromotionToEmailsRsp, error)
		// promotion
		ListPromotion(ctx context.Context, in *ListPromotionReq, opts ...grpc.CallOption) (*ListPromotionRsp, error)
		CreatePromotion(ctx context.Context, in *CreatePromotionReq, opts ...grpc.CallOption) (*CreatePromotionRsp, error)
	}

	defaultPromotionService struct {
		cli zrpc.Client
	}
)

func NewPromotionService(cli zrpc.Client) PromotionService {
	return &defaultPromotionService{
		cli: cli,
	}
}

func (m *defaultPromotionService) AddPromotionToEmails(ctx context.Context, in *AddPromotionToEmailsReq, opts ...grpc.CallOption) (*AddPromotionToEmailsRsp, error) {
	client := promotion.NewPromotionServiceClient(m.cli.Conn())
	return client.AddPromotionToEmails(ctx, in, opts...)
}

// promotion
func (m *defaultPromotionService) ListPromotion(ctx context.Context, in *ListPromotionReq, opts ...grpc.CallOption) (*ListPromotionRsp, error) {
	client := promotion.NewPromotionServiceClient(m.cli.Conn())
	return client.ListPromotion(ctx, in, opts...)
}

func (m *defaultPromotionService) CreatePromotion(ctx context.Context, in *CreatePromotionReq, opts ...grpc.CallOption) (*CreatePromotionRsp, error) {
	client := promotion.NewPromotionServiceClient(m.cli.Conn())
	return client.CreatePromotion(ctx, in, opts...)
}
