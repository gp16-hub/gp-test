// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: tax.proto

package tax

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Tax interface {
		CalculateTax(ctx context.Context, in *TaxRequest, opts ...grpc.CallOption) (*TaxResponse, error)
	}

	defaultTax struct {
		cli zrpc.Client
	}
)

func NewTax(cli zrpc.Client) Tax {
	return &defaultTax{
		cli: cli,
	}
}

func (m *defaultTax) CalculateTax(ctx context.Context, in *TaxRequest, opts ...grpc.CallOption) (*TaxResponse, error) {
	client := NewTaxClient(m.cli.Conn())
	return client.CalculateTax(ctx, in, opts...)
}
