// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.5
// source: external/external.proto

package external

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	External_CreateTaskForCustomer_FullMethodName             = "/external.External/CreateTaskForCustomer"
	External_CreateSubscriptionListForCustomer_FullMethodName = "/external.External/CreateSubscriptionListForCustomer"
	External_UnsubscribedEmailList_FullMethodName             = "/external.External/UnsubscribedEmailList"
)

// ExternalClient is the client API for External service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExternalClient interface {
	CreateTaskForCustomer(ctx context.Context, in *CreateTaskForCustomerRequest, opts ...grpc.CallOption) (*CreateTaskForCustomerResponse, error)
	CreateSubscriptionListForCustomer(ctx context.Context, in *CreateSubscriptionListForCustomerRequest, opts ...grpc.CallOption) (*CreateSubscriptionListForCustomerResponse, error)
	UnsubscribedEmailList(ctx context.Context, in *UnsubscribedEmailListRequest, opts ...grpc.CallOption) (*UnsubscribedEmailListResponse, error)
}

type externalClient struct {
	cc grpc.ClientConnInterface
}

func NewExternalClient(cc grpc.ClientConnInterface) ExternalClient {
	return &externalClient{cc}
}

func (c *externalClient) CreateTaskForCustomer(ctx context.Context, in *CreateTaskForCustomerRequest, opts ...grpc.CallOption) (*CreateTaskForCustomerResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateTaskForCustomerResponse)
	err := c.cc.Invoke(ctx, External_CreateTaskForCustomer_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) CreateSubscriptionListForCustomer(ctx context.Context, in *CreateSubscriptionListForCustomerRequest, opts ...grpc.CallOption) (*CreateSubscriptionListForCustomerResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSubscriptionListForCustomerResponse)
	err := c.cc.Invoke(ctx, External_CreateSubscriptionListForCustomer_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) UnsubscribedEmailList(ctx context.Context, in *UnsubscribedEmailListRequest, opts ...grpc.CallOption) (*UnsubscribedEmailListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UnsubscribedEmailListResponse)
	err := c.cc.Invoke(ctx, External_UnsubscribedEmailList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExternalServer is the server API for External service.
// All implementations must embed UnimplementedExternalServer
// for forward compatibility.
type ExternalServer interface {
	CreateTaskForCustomer(context.Context, *CreateTaskForCustomerRequest) (*CreateTaskForCustomerResponse, error)
	CreateSubscriptionListForCustomer(context.Context, *CreateSubscriptionListForCustomerRequest) (*CreateSubscriptionListForCustomerResponse, error)
	UnsubscribedEmailList(context.Context, *UnsubscribedEmailListRequest) (*UnsubscribedEmailListResponse, error)
	mustEmbedUnimplementedExternalServer()
}

// UnimplementedExternalServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedExternalServer struct{}

func (UnimplementedExternalServer) CreateTaskForCustomer(context.Context, *CreateTaskForCustomerRequest) (*CreateTaskForCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskForCustomer not implemented")
}
func (UnimplementedExternalServer) CreateSubscriptionListForCustomer(context.Context, *CreateSubscriptionListForCustomerRequest) (*CreateSubscriptionListForCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubscriptionListForCustomer not implemented")
}
func (UnimplementedExternalServer) UnsubscribedEmailList(context.Context, *UnsubscribedEmailListRequest) (*UnsubscribedEmailListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubscribedEmailList not implemented")
}
func (UnimplementedExternalServer) mustEmbedUnimplementedExternalServer() {}
func (UnimplementedExternalServer) testEmbeddedByValue()                  {}

// UnsafeExternalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExternalServer will
// result in compilation errors.
type UnsafeExternalServer interface {
	mustEmbedUnimplementedExternalServer()
}

func RegisterExternalServer(s grpc.ServiceRegistrar, srv ExternalServer) {
	// If the following call pancis, it indicates UnimplementedExternalServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&External_ServiceDesc, srv)
}

func _External_CreateTaskForCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskForCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).CreateTaskForCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: External_CreateTaskForCustomer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).CreateTaskForCustomer(ctx, req.(*CreateTaskForCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_CreateSubscriptionListForCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubscriptionListForCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).CreateSubscriptionListForCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: External_CreateSubscriptionListForCustomer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).CreateSubscriptionListForCustomer(ctx, req.(*CreateSubscriptionListForCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_UnsubscribedEmailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribedEmailListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).UnsubscribedEmailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: External_UnsubscribedEmailList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).UnsubscribedEmailList(ctx, req.(*UnsubscribedEmailListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// External_ServiceDesc is the grpc.ServiceDesc for External service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var External_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "external.External",
	HandlerType: (*ExternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTaskForCustomer",
			Handler:    _External_CreateTaskForCustomer_Handler,
		},
		{
			MethodName: "CreateSubscriptionListForCustomer",
			Handler:    _External_CreateSubscriptionListForCustomer_Handler,
		},
		{
			MethodName: "UnsubscribedEmailList",
			Handler:    _External_UnsubscribedEmailList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "external/external.proto",
}
