syntax = "proto3";

package tax;
option go_package = "./tax;tax";

service Tax {
  rpc CalculateTax (TaxRequest) returns (TaxResponse) {};
}

message TaxRequest {
  From from = 1;
  To to = 2;
  repeated LineItemsRequest lineItems = 3;
  ShippingRequest shipping = 4;
  bool withCache = 5;
}

message TaxResponse {
  double totalAmount = 1;
  double taxableAmount = 2;
  double taxCollectable = 3;
  double taxRate = 4;
  ShippingResponse shipping = 5;
  repeated LineItemsResponse lineItems = 6;
}

message From {
  string countryCode = 1;
  string state = 2;
  string city = 3;
  string street = 4;
  string zip = 5;
}

message To {
  string countryCode = 1;
  string state = 2;
  string city = 3;
  string street = 4;
  string zip = 5;
}

message LineItemsRequest {
  string id = 1;
  int64 quantity = 2;
  string productTaxCategory = 3;
  double unitPrice = 4;
  double discount = 5;
}

message LineItemsResponse {
  string id = 1;
  double taxableAmount = 2;
  double taxCollectable = 3;
  double taxRate = 4;
  bool includedInPrice = 5;
}

message ShippingRequest {
  double amount = 1;
  string productTaxCategory = 2;
}

message ShippingResponse {
  double taxableAmount = 1;
  double taxCollectable = 2;
  double taxRate = 3;
  bool includedInPrice = 4;
}